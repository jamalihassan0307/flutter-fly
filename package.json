{
  "name": "flutter-fly",
  "displayName": "Flutter Fly: Wireless Debug & Run",
  "description": "The ultimate Flutter development companion for VSCode. Connect devices wirelessly, build APKs/AABs, run Flutter apps, and manage your entire Flutter workflow from one beautiful interface.",
  "version": "1.0.4",
  "publisher": "jamalihassan0307",
  "repository": "https://github.com/jamalihassan0307/flutter-fly",
  "homepage": "https://github.com/jamalihassan0307/flutter-fly",
  "engines": {
    "vscode": "^1.85.0"
  },
  "icon": "media/icon.png",
  "galleryBanner": {
    "color": "#02569B",
    "theme": "dark"
  },
  "categories": [
    "Other",
    "Debuggers",
    "Programming Languages",
    "Snippets",
    "Extension Packs",
    "Formatters",
    "Linters"
  ],
  "keywords": [
    "flutter",
    "dart",
    "android",
    "ios",
    "mobile-development",
    "wireless-debugging",
    "debugging",
    "apk",
    "aab",
    "build-tools",
    "hot-reload",
    "device-management",
    "emulator",
    "simulator",
    "flutter-doctor",
    "flutter-build"
  ],
  "main": "./out/main.js",
  "scripts": {
    "vscode:prepublish": "npm run setup && npm run compile",
    "setup": "npm install",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "build": "npm run clean && npm run compile && npm run package",
    "clean": "rimraf out dist",
    "package": "vsce package"
  },
  "publishConfig": {
    "access": "public"
  },
  "config": {
    "commitizen": {
      "path": "cz-emoji"
    }
  },
  "dependencies": {
    "adm-zip": "^0.4.14",
    "diff": ">=3.5.0",
    "local-devices": "^3.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/vscode": "^1.85.0",
    "@vscode/vsce": "^2.32.0",
    "rimraf": "^5.0.0",
    "typescript": "^5.0.0"
  },
  "activationEvents": [
    "onCommand:flutterFly.openFlutterPanel",
    "onCommand:flutterFly.connectWirelessDevice",
    "onCommand:flutterFly.showConnectedDevices",
    "onCommand:flutterFly.runFlutterDoctor",
    "onCommand:flutterFly.getPackages",
    "onCommand:flutterFly.buildAPK",
    "onCommand:flutterFly.buildAppBundle",
    "onCommand:flutterFly.cleanProject",
    "onCommand:flutterFly.killserver",
    "onCommand:flutterFly.enableFirebaseDebug",
    "onCommand:flutterFly.disableFirebaseDebug"
  ],
  "contributes": {
    "contexts": [
      {
        "id": "workspaceHasFlutterProject",
        "description": "True when the workspace contains a Flutter project",
        "default": false
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "flutter-fly-sidebar",
          "title": "Flutter Fly",
          "icon": "media/icon.png"
        }
      ]
    },
    "views": {
      "flutter-fly-sidebar": [
        {
          "id": "flutter-fly-panel",
          "name": "Flutter Fly Panel"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "flutter-fly-panel",
        "contents": "üöÄ **Welcome to Flutter Fly!**\n\nYour ultimate Flutter development companion for wireless debugging, building, and running Flutter apps.\n\n**Quick Actions:**",
        "buttons": [
          {
            "title": "üéØ Open Main Panel",
            "command": "flutterFly.openFlutterPanel"
          },
          {
            "title": "üì± Connect Device",
            "command": "flutterFly.connectWirelessDevice"
          },
          {
            "title": "üîç Show Devices",
            "command": "flutterFly.showConnectedDevices"
          },
          {
            "title": "‚ö° Flutter Doctor",
            "command": "flutterFly.runFlutterDoctor"
          },
          {
            "title": "üì¶ Get Packages",
            "command": "flutterFly.getPackages"
          },
          {
            "title": "üßπ Clean Project",
            "command": "flutterFly.cleanProject"
          }
        ],
        "when": "workspaceHasFlutterProject"
      }
    ],
    "commands": [
      {
        "command": "flutterFly.openFlutterPanel",
        "title": "üöÄ Open Flutter Fly Panel",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.connectWirelessDevice",
        "title": "üì± Connect Wireless Device",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.showConnectedDevices",
        "title": "üîç Show Connected Devices",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.runFlutterDoctor",
        "title": "‚ö° Flutter Doctor",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.getPackages",
        "title": "üì¶ Get Packages",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.buildAPK",
        "title": "üèóÔ∏è Build APK",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.buildAppBundle",
        "title": "üì± Build App Bundle (AAB)",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.cleanProject",
        "title": "üßπ Clean Project",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.killserver",
        "title": "‚ö†Ô∏è Kill ADB Server",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.enableFirebaseDebug",
        "title": "üî• Enable Firebase Debug",
        "category": "Flutter Fly"
      },
      {
        "command": "flutterFly.disableFirebaseDebug",
        "title": "üî• Disable Firebase Debug",
        "category": "Flutter Fly"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "flutterFly.openFlutterPanel",
          "when": "workspaceHasFlutterProject"
        },
        {
          "command": "flutterFly.connectWirelessDevice",
          "when": "workspaceHasFlutterProject"
        },
        {
          "command": "flutterFly.showConnectedDevices",
          "when": "workspaceHasFlutterProject"
        },
        {
          "command": "flutterFly.killserver",
          "when": "workspaceHasFlutterProject"
        }
      ],
      "view/title": [
        {
          "command": "flutterFly.openFlutterPanel",
          "when": "view == flutter-fly-panel",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "flutterFly.connectWirelessDevice",
          "when": "view == flutter-fly-panel",
          "group": "inline"
        },
        {
          "command": "flutterFly.showConnectedDevices",
          "when": "view == flutter-fly-panel",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "title": "Flutter Fly",
      "properties": {
        "flutterFly.adbPath": {
          "type": "string",
          "default": "",
          "description": "Custom path to ADB executable"
        },
        "flutterFly.flutterPath": {
          "type": "string",
          "default": "",
          "description": "Custom path to Flutter executable"
        },
        "flutterFly.defaultBuildMode": {
          "type": "string",
          "enum": [
            "debug",
            "profile",
            "release"
          ],
          "default": "debug",
          "description": "Default build mode for APK/AAB builds"
        }
      }
    }
  }
}
